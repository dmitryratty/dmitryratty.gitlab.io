Ну… Математика!

В последнее время интересность общения с людьми для меня часто коррелирует с их уровнем математических знаний. Также попытки разбираться во многих интересующих меня вопросах упираются в низкий уровень моих математических знаний. Одно из моих предположений, это что многие математические абстракции обладают высокой точностью и эффективностью сжатия информации о мире, поэтому хотелось бы иметь эти абстракции в своей голове.

1. Изучая математику я хотел бы иметь постоянную обратную связь о том, действительно ли я понимаю текущий материал. Для этого подходит решение задач.

2. Исходя из моего предположения о пользе удержания в голове некоторых абстракций хотелось бы механизм их удержания. Думаю может сработать spaced repetition.[1]

3. Для эмоционального подкрепления изучения можно использовать игровые механизмы с прогрессом по темам, достижениями и прочим.

В идеале видится что-то подобное сервисам изучения программирования и языков, CodinGame, HackerRank, Duolingo, LinguaLeo. Есть задачи прогресса по темам, если задача непонятна можно перейти на обучающие материалы к ней, есть автоматическая проверка решений задач, есть эмоциональное подкрепление визуализацией прогресса, достижениями и прочим. И хотелось бы добавление к этому какой-то системы spaced repetition, часто слышал об Anki, но сам не пробовал.

Сейчас прохожу курсы математики на Khan Academy, начав с детского сада:
 - http://khanacademy.org/profile/dmitryratty

[1]. https://en.wikipedia.org/wiki/Spaced_repetition

* * *

https://arbital.com/p/bayes_rule/

"The Map of Mathematics" by Domain of Science:
 - https://youtu.be/OmJ-4B-mS-Y?si=bBWOSbdlpQ7kV9Bz

Algorithmic Mathematical Art:
 - http://xahlee.info/math/algorithmic_math_art.html
 - https://readhacker.news/c/64ysi

"Painting a Character with Maths" by Inigo Quilez:
 - https://youtu.be/8--5LwHRhjk?si=mdgTEpJhTdyTTFZk

* * *

Хаотичная пачка чужих рекомендаций по изучению математики. Если у вас есть рекомендации по изучению математики, давайте их мне.

❖ Раз уж речь зашла о математике для программистов, скину https://pimbook.org/ - я эту книгу не читал, но блог автора нравится. ❖

❖ Именно быстрее понимать штуки - не думаю; математическая нотация в целом привычна. Развёрнуто называть и типизировать объекты - очень да; формальная математика регулярно грешит ёмкостью в ущерб понятности. Если забивать на формальную проверку доказательств, то выразимости обычных языков программирования… Технически достаточно, но нотация будет неудобнее, чем возможность писать/рисовать штуки на бумаге; теоркатные диаграммы и топологические иллюстрации в особенности. При этом есть как бы языки программирования, которые на самом деле про формулировку и доказательство теорем; они клёвые; в них всё ещё нужно быть многословными, но практика работы в них очень хорошо ставит общие навыки работы с доказательствами. Coq, Agda, Isabelle/HOL. Про Coq есть отличный курс https://softwarefoundations.cis.upenn.edu/lf-current/index.html </> Алсо, в личных заметках про математику я определённо заимствую термины/концепты/нотацию из разных ЯП, и всем советую. ❖

❖ https://arxiv.org/abs/2011.00412 </> https://www.youtube.com/watch?v=4AuV93LOPcE </> https://www.scottaaronson.com/papers/bb.pdf </> https://youtube.com/user/numberphile - cамый не техничный </> https://youtube.com/c/MichaelPennMath - cамый техничный </> https://youtube.com/c/3blue1brown - золотая середина ❖

❖ Не знаю, какой у тебя контекст, но «вдруг пригодится»: на моей практике вот эти материалы помогают бороться с выученной беспомощностью в математике: читать теорию: http://spacemath.xyz </> Отрабатывать практику: https://school-assistant.ru/?class=5_matematika </> До конца это проходить это все необязательно и возможно даже излишне, но для внутренней уверенности может помочь. ❖

❖ https://en.wikipedia.org/wiki/Three-valued_logic ❖